version: '3'

services:
    minotour_db:
        build:
            dockerfile: dockerfile-db
            context: .
        container_name: minotour_db
        networks:
            - production-network
        ports:
            - "5432:5432"
    minotour_redis:
        image: redis
        container_name: minotour_redis
        networks:
            - production-network
        expose:
            - 6379
    web:
        build:
            dockerfile: dockerfile-web
            context: .
        ports:
            - 10000:8000
        networks:
            - production-network
        depends_on:
            - minotour_db
            - minotour_redis
        volumes:
            - "d:/test:/var/lib/minotour/apps/minotourapp"
#    minimap2:
#        build:
#            dockerfile: minimap2.dockerfile
#            context: .
#        networks:
#            - production-network
#        depends_on:
#            - web
        # command: ["./run_django.sh"]
        # volumes:
        #    - ".:/var/lib/minotour/apps/minotourapp"
networks:
    production-network:
        driver: bridge

#version: '3'
#
#services:
#    db:
#        image: mysql
#        environment:
#            MYSQL_ROOT_PASSWORD: test
#        volumes:
#            - ./mysql-data:/var/lib/mysql
#        ports:
#            - "3307:3306"
#        networks:
#            - production-network
#
#    redis:
#        image: redis
#        volumes:
#            - ./redis-data:/data
#        ports:
#            - "6379:6379"
#        networks:
#            - production-network
#
#    minotour:
#        build:
#            dockerfile: ./minotourapp.dockerfile
#            context: .
#        image: roberto/minotourapp
#        container_name: minotourapp
#        volumes:
#            - .:/opt/minotourapp
#        ports:
#            - "8000:8000"
#        networks:
#            - production-network
#
#  web:
#    build: .
#    command: python3 manage.py runserver 0.0.0.0:8000
#    volumes:
#      - .:/code
#    ports:
#      - "8000:8000"
#    depends_on:
#      - db
#
#networks:
#    production-network:
#        driver: bridge

version: '3.7'

services:

    minotour_redis:
        build:
            dockerfile: docker/redis.dockerfile
            context: .
        container_name: minotour_redis
        volumes:
            - redis_minotour:/redis_files

    db:
        image: mariadb
        container_name: db
        environment:
            MYSQL_ROOT_PASSWORD: test
            MYSQL_DATABASE: minotour
            MYSQL_USER: dba
            MYSQL_PASSWORD: dba
        volumes:
            - db_data_dir:/var/lib/mysql

    web:
        build:
            dockerfile: docker/celery-worker.dockerfile
            context: .
        command: bash -c "uwsgi --ini minotourapp_uwsgi.ini && cd /var/lib/minotour/apps/minotourapp && python manage.py makemigrations && python manage.py migrate && python manage.py loaddata fixtures/auxiliary_data.json && /etc/init.d/celeryd start && celery -A minotourapp beat -l debug -f /var/lib/minotour/logs/celerybeat.log --detach && nginx -g 'daemon off;'  && echo done"
        container_name: web
        environment:
            MT_DB_ENGINE: 'django.db.backends.mysql'
            MT_DB_NAME: minotour
            MT_DB_USER: dba
            MT_DB_PASS: dba
            MT_DB_PORT: 3306
            MT_DB_HOST: db
            MT_SECRET_KEY: 'hello_secret_key!!'
            MT_DJANGO_DEBUG: '0'
            MT_MAILGUN_ACCESS_KEY: ''
            MT_MAILGUN_SERVER_NAME: ''
            MT_TWITTOKEN: ''
            MT_TWITTOKEN_SECRET: ''
            MT_TWITCONSUMER_KEY: ''
            MT_TWITCONSUMER_SECRET: ''
            MT_REFERENCE_LOCATION: '/var/lib/minotour/apps/data'
            MT_MINIMAP2: '/var/lib/minotour/apps/minotourapp/extra/minimap2-2.17_x64-linux/minimap2'
            MT_CELERY_REDIS_URL: 'redis+socket:///redis_data/redis.sock'
            MT_DJANGO_REDIS_URL: 'redis+socket:///redis_data/redis.sock'
            MT_ARTIC_RESULTS_DIR: '/var/lib/minotour/apps/data' # Store the Artic results in this directory
            MT_ARTIC_SCHEME_DIR: '<Path/To/Artic/Code/Scheme_Directories>' # Read the Artic scheme directories, found where the Artic NCOV piprline github repo was clones.
            MT_ARTIC_MAX_PIPELINES: "1" # Maximum number of Artic tasks to be run at any one time
            MT_CELERY_WORKER_COUNT: "2" # Number of Celery workers to start, no more than number of CPU cores
            MT_CELERY_MINIMAP2_WORKER_COUNT: "1" # Number of celery minimap2 threads to start, no more than num CPU cores
            MT_TIME_UNTIL_INACTIVE: "7" # Number of days since last flowcell activity until a flowcell is listed as inactive
            MT_TIME_UNTIL_ARCHIVE: "14" # Number of days since last flowcell activity until a flowcell is archived and fastq data deleted
            MT_SKIP_SAVING_SEQUENCE: "1"
            MT_ALLOW_UPLOAD: "1" # Boolean value, 1 or 0. If true, data can be uplaoded to the server. If false, it cannot be.
            MT_DESTROY_ARTIC_EVIDENCE: "0" # Boolean value if True, data that could potentially hold sensitive patient data that is fed into the artic pipeline is removed 12 hours after the run is finished.
            MT_TWEET_CELERY_FAILURES: 0 # Boolean value if True, failures in some celery tasks are tweeted to the administrator account for this minoTour instance.
            MT_SERVER_URL: "localhost" # if not setting up a server don't worry about this - it just shows the url on the client page for the example commands
        ports:
            - 8100:8100
        depends_on:
            - db
            - minotour_redis
        volumes:
            - type: volume
              source: data_minotour
              target: /var/lib/minotour/apps/data
            - type: volume
              source: redis_minotour
              target: /redis_data
              volume:
                  nocopy: true
        restart: on-failure

volumes:
    data_minotour:
    db_data_dir:
    redis_minotour:
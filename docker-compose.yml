version: '3'

services:

    redis:
        image: redis
        container_name: redis

    db:
        image: mariadb
        container_name: db
        environment:
            MYSQL_ROOT_PASSWORD: test
            MYSQL_DATABASE: minotour
            MYSQL_USER: dba
            MYSQL_PASSWORD: dba
        volumes:
            - ../db_data_dir:/var/lib/mysql

    web:
        build:
            dockerfile: docker/web.dockerfile
            context: .
        command: bash -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py loaddata fixtures/auxiliary_data.json && python3 manage.py runserver 0.0.0.0:8100"
        container_name: web
        environment:
            MT_DB_ENGINE: 'django.db.backends.mysql'
            MT_DB_NAME: minotour
            MT_DB_USER: dba
            MT_DB_PASS: dba
            MT_DB_PORT: 3306
            MT_DB_HOST: db
            MT_SECRET_KEY: ''
            MT_DJANGO_DEBUG: 'True'
            MT_MAILGUN_ACCESS_KEY: ''
            MT_MAILGUN_SERVER_NAME: ''
            MT_TWITTOKEN: ''
            MT_TWITTOKEN_SECRET: ''
            MT_TWITCONSUMER_KEY: ''
            MT_TWITCONSUMER_SECRET: ''
<           MT_REFERENCE_LOCATION: '/var/lib/minotour/apps/minotourapp/localdata'
=#            MT_REFERENCE_LOCATION: '/var/lib/minotour/data'
>           MT_MINIMAP2: '/var/lib/minotour/apps/minotourapp/extra/minimap2/minimap2'
            MT_CELERY_BROKER_URL: 'redis://redis:6379/0'
            MT_CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
        ports:
            - 8100:8100
        depends_on:
            - db
            - redis
        volumes:
            - .:/var/lib/minotour/apps/minotourapp
        restart: on-failure

    celery:
        build:
            dockerfile: docker/celery.dockerfile
            context: .
        command: bash -c "celery -A minotourapp beat -l info"
        container_name: celery
        environment:
            MT_DB_ENGINE: 'django.db.backends.mysql'
            MT_DB_NAME: minotour
            MT_DB_USER: dba
            MT_DB_PASS: dba
            MT_DB_PORT: 3306
            MT_DB_HOST: db
            MT_SECRET_KEY: ''
            MT_DJANGO_DEBUG: 'True'
            MT_MAILGUN_ACCESS_KEY: ''
            MT_MAILGUN_SERVER_NAME: ''
            MT_TWITTOKEN: ''
            MT_TWITTOKEN_SECRET: ''
            MT_TWITCONSUMER_KEY: ''
            MT_TWITCONSUMER_SECRET: ''
<<<<<<< HEAD
            MT_REFERENCE_LOCATION: '/var/lib/minotour/apps/minotourapp/localdata'
=======
            MT_REFERENCE_LOCATION: '/var/lib/minotour/data'
>>>>>>> fafeb06895d9cac5264060841b77dab0d81c1e78
            MT_MINIMAP2: '/var/lib/minotour/apps/minotourapp/extra/minimap2/minimap2'
            MT_CELERY_BROKER_URL: 'redis://redis:6379/0'
            MT_CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
        depends_on:
            - db
            - redis
            - web
        restart: on-failure

    celery_worker:
        build:
            dockerfile: docker/celery-worker.dockerfile
            context: .
        command: "celery -A minotourapp worker -l info"
        container_name: celery_worker
        environment:
            MT_DB_ENGINE: 'django.db.backends.mysql'
            MT_DB_NAME: minotour
            MT_DB_USER: dba
            MT_DB_PASS: dba
            MT_DB_PORT: 3306
            MT_DB_HOST: db
            MT_SECRET_KEY: ''
            MT_DJANGO_DEBUG: 'True'
            MT_MAILGUN_ACCESS_KEY: ''
            MT_MAILGUN_SERVER_NAME: ''
            MT_TWITTOKEN: ''
            MT_TWITTOKEN_SECRET: ''
            MT_TWITCONSUMER_KEY: ''
            MT_TWITCONSUMER_SECRET: ''
<<<<<<< HEAD
            MT_REFERENCE_LOCATION: '/var/lib/minotour/apps/minotourapp/localdata'
=======
            MT_REFERENCE_LOCATION: '/var/lib/minotour/data'
>>>>>>> fafeb06895d9cac5264060841b77dab0d81c1e78
            MT_MINIMAP2: '/var/lib/minotour/apps/minotourapp/extra/minimap2/minimap2'
            MT_CELERY_BROKER_URL: 'redis://redis:6379/0'
            MT_CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
        depends_on:
            - db
            - redis
            - web
            - celery
        restart: on-failure

var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.createTemplateTagFirstArg=function(a){return a.raw=a};$jscomp.createTemplateTagFirstArgWithRaw=function(a,b){a.raw=b;return a};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
$jscomp.arrayFromIterator=function(a){for(var b,d=[];!(b=a.next()).done;)d.push(b.value);return d};$jscomp.arrayFromIterable=function(a){return a instanceof Array?a:$jscomp.arrayFromIterator($jscomp.makeIterator(a))};
var AlignmentController=function(a){this._flowcellId=a;this.coverageChartController=new CoverageChartController("coverage_div","");this._axiosInstance=axios.create({headers:{"X-CSRFToken":getCookie("csrftoken")}});this._selectData=[];this._readTypeSelect=$("#readTypeSelect");this._referenceSelect=$("#referenceSelect");this._chromosomeSelect=$("#chromosomeSelect");this._barcodeSelect=$("#barcodeSelect");this._lookupDownStreamSelects={referenceSelect:[this._readTypeSelect,this._chromosomeSelect,this._barcodeSelect],
readTypeSelect:[this._chromosomeSelect,this._barcodeSelect],chromosomeSelect:[this._barcodeSelect],barcodeSelect:[]};this._sumToCheck=0;this._selects=[this._readTypeSelect,this._referenceSelect,this._chromosomeSelect,this._barcodeSelect];this._addChangeListenerToSelects();this._createColumnCharts();this._addListenerToResetButton();this._interval=setInterval(this._reloadPageData,45E3,a,this);$(window).on("unload",function(){console.log("clearing Alignment interval");clearInterval(this._interval)})};
AlignmentController.prototype.updateTab=function(){this._reloadPageData(this._flowcellId,this)};AlignmentController.prototype._reloadPageData=function(a,b){"sequence-mapping"===getSelectedTab()&&(b._updateOptionDropDowns(a),b._drawPafSummaryTable(a),b._createColumnCharts(),b._fetchChromosomeInGenomeCoverageData(a))};
AlignmentController.prototype._updateOptionDropDowns=function(a){var b=this;this._axiosInstance.get("/api/v1/alignment/"+a+"/mapped-references").then(function(d){var f=$("#referenceSelect").val(),e=new Set(d.data.map(function(c){return c.referenceId===parseInt(f)?'<option value="'+c.referenceId+'" data-jm-id="'+c.jmId+'" selected>'+c.referenceName+"</option>":'<option value="'+c.referenceId+'" data-jm-id="'+c.jmId+'">'+c.referenceName+"</option>"}));b._selectData=d.data;b._referenceSelect.html([].concat($jscomp.arrayFromIterable(e)));
b._selectOnChange({srcElement:{id:"referenceSelect"}},!1)})["catch"](function(d){console.error(d)})};AlignmentController.prototype._addListenerToResetButton=function(){var a=this;$("#reset-chart-zoom").on("click",function(){a.coverageChartController.resetDetailChartZoom()})};AlignmentController.prototype._addChangeListenerToSelects=function(){var a=this;this._selects.forEach(function(b){b.on("change",function(){a._selectOnChange(event,!0)})})};
AlignmentController.prototype._selectOnChange=function(a,b){var d=a.srcElement.id;var f=$("#referenceSelect option:selected").attr("data-jm-id"),e=this._selectData.filter(function(g){return g.jmId===parseInt(f)});var c=this._lookupDownStreamSelects[d];$("#"+d.substring(0,d.length-6)+"Placeholder").remove();c.forEach(function(g){var k=g.val(),m=g.attr("id"),n=m.substring(0,m.length-6),p=n+"Id",q=n+"Name",r=!1;m=new Set(e.map(function(l){return l[p]===parseInt(k)||"barcode"===n&&l[p]===k?(r=!0,'<option value="'+
l[p]+'" selected>'+l[q]+"</option>"):'<option value="'+l[p]+'">'+l[q]+"</option>"}));r||m.add('<option value="-1" id="'+n+'Placeholder" selected>Please Choose</option>');g.html([].concat($jscomp.arrayFromIterable(m)).reverse())});if(this._selects.every(function(g){return!0===!!g.children().length&&"-1"!==g.val()})){$("#reset-chart-zoom").attr("disabled",!1);d=this._barcodeSelect.val();var h=this._readTypeSelect.val();c=this._chromosomeSelect.val();h="/api/v1/alignment/coverage/"+f+"/"+d+"/"+h+"/"+
c;b&&(this.coverageChartController.reloadCoverageCharts(h),this.coverageChartController.resetDetailChartZoom());this._fetchBarcodeCoverageColumnChartsData(this._flowcellId,c,!0,d)}};
AlignmentController.prototype._drawPafSummaryTable=function(a){var b=$(".mapping-table");$.fn.DataTable.isDataTable(b)?b.DataTable().ajax.reload(null,!1):b.DataTable({ajax:{url:"/api/v1/alignment/"+a+"/paf-summary-table",async:!0,error:function(d,f,e){console.error(d);console.error(e)}},columns:[{data:"barcode_name"},{data:"reference_name"},{data:"chromosome_name"},{data:"reference_line_length"},{data:"read_count"},{data:"total_yield"},{data:"average_read_length"},{data:"coverage"}]})};
AlignmentController.prototype._createColumnCharts=function(){var a={lang:{noData:"Please select above"}};this.chart_per_barcode_cov||(this.chart_per_barcode_cov=makeColumnChart("per-barcode-cov","BARCODE COVERAGE","BARCODE COVERAGE"));this.chart_per_barcode_avg||(this.chart_per_barcode_avg=makeColumnChart("per-barcode-avg","MEAN READ LENGTH BY BARCODE","MEAN READ LENGTH BY BARCODE"));this.chart_per_genome_cov||(this.chart_per_genome_cov=makeColumnChart("per-genome-cov","GENOME COVERAGE","GENOME COVERAGE"));
this.chart_per_genome_avg||(this.chart_per_genome_avg=makeColumnChart("per-genome-avg","MEAN READ LENGTH BY GENOME","MEAN READ LENGTH BY GENOME"));this.chart_per_barcode_avg.update(a);this.chart_per_barcode_cov.update(a)};
AlignmentController.prototype._fetchBarcodeCoverageColumnChartsData=function(a,b,d,f){var e=this;this._axiosInstance.get("/api/v1/alignment/"+a+"/pafsummary/",{params:{chromosomeId:b,barcodePk:f}}).then(function(c){var h=c.data;[[e.chart_per_barcode_cov,"coverageData"],[e.chart_per_barcode_avg,"avgRLData"]].forEach(function(g){var k=$jscomp.makeIterator(g);g=k.next().value;k=k.next().value;e._updateCoverageColumnCharts(g,h[k],h.categories,d)})})["catch"](function(c){console.error(c)})};
AlignmentController.prototype._fetchChromosomeInGenomeCoverageData=function(a){var b=this;this._axiosInstance.get("/api/v1/alignment/"+a+"/genome-coverage-summary/").then(function(d){var f=d.data;[[b.chart_per_genome_cov,"coverageData"],[b.chart_per_genome_avg,"avgRLData"]].forEach(function(e){var c=$jscomp.makeIterator(e);e=c.next().value;c=c.next().value;b._updateCoverageColumnCharts(e,f[c],f.categories,!1)})})};
AlignmentController.prototype._updateCoverageColumnCharts=function(a,b,d,f){if(f)for(;a.series.length;)a.series[0].remove(!1);a.xAxis[0].setCategories(d);b.forEach(function(e){var c=a.series.filter(function(h){return h.name===e.name});c.length?checkHighChartsDataIsIdentical(e.data,c[0].options.data)||c[0].setData(e.data):a.addSeries(e)})};
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.createTemplateTagFirstArg=function(a){return a.raw=a};$jscomp.createTemplateTagFirstArgWithRaw=function(a,b){a.raw=b;return a};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
$jscomp.arrayFromIterator=function(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c};$jscomp.arrayFromIterable=function(a){return a instanceof Array?a:$jscomp.arrayFromIterator($jscomp.makeIterator(a))};
var BasecalledDataController=function(a){setSelectedBarcode("All reads","BasecalledData");this._currentBarcode=getSelectedBarcode("BasecalledData");this._currentRuBarcode="None";this._flowcellId=a;this._axiosInstance=axios.create({headers:{"X-CSRFToken":getCookie("csrftoken")}});this._barcodesHtmlElement=$("#nav-tabs-barcodes");this.barcodesList=[];this._ruBarcodesSet=new Set;this._basecalledSummaryTable=null;this.initialiseCharts(a,this._currentBarcode);this._addListenerToRuSelect()};
BasecalledDataController.prototype.initialiseCharts=function(a,b){var c=this;this._fetchSummaryDataHtmlTable(a);this._createHistogramCharts(a,this._currentBarcode);this._createBaseCalledReadCharts(a,this._currentBarcode);this._createFlowcellHeatMaps(a);this._createBarcodeProportionBarCharts(a);this.chartsInitialised=!0;this._interval=setInterval(function(){c.updateTab()},6E4);$(window).on("unload",function(){console.log("clearing base-called interval");clearInterval(this._interval)})};
BasecalledDataController.prototype._addListenerToRuSelect=function(){var a=this;$("#ru-barcodes").on("change",function(b){a._ruSelectChange(b,a)})};BasecalledDataController.prototype._revealResults=function(){$("#tab-basecalled-data").addClass("loaded")};
BasecalledDataController.prototype._updateRuSelect=function(){var a=['<option value="Sequenced">Sequenced</option>','<option value="Unblocked">Unblocked</option>'],b=$("#ru-barcodes");$("#ru-container").css("visibility","visible");this._ruBarcodesSet.has(a[0])||this._ruBarcodesSet.has(a[1])||b.append(a);this._ruBarcodesSet=new Set([].concat($jscomp.arrayFromIterable(this._ruBarcodesSet),$jscomp.arrayFromIterable(a)))};
BasecalledDataController.prototype._ruSelectChange=function(a,b){b._changeBarcode(a,!0)};
BasecalledDataController.prototype._updateBarcodeNavTab=function(a){var b=this,c,d=[],m,g=[],e=this,f=0===this.barcodesList.length;this._axiosInstance.get("/api/v1/flowcells/barcodes",{params:{flowcellId:a}}).then(function(h){200!==h.status&&console.error("Error "+h.status);d=h.data;d.includes("Unblocked")&&b._updateRuSelect();d=d.filter(function(n){return!["No barcode","Sequenced","Unblocked"].includes(n)});f||e.barcodesList.forEach(function(n){d.includes(n)&&(c=d.findIndex(function(p){return p===
n}),d.splice(c,1))});d.forEach(function(n){e.barcodesList.push(n);m=n===e._currentBarcode?"active":"";g.push('<li class="barcode-tab nav-item">\n                                            <a class="nav-link '+m+'" data-toggle="pill" id="'+n.replace(" ","_")+'" onclick="flowcellController.flowcellTabController.baseCalledDataController._changeBarcode(event)">'+n+"</a>\n                                        </li>")});0<d.length&&b._barcodesHtmlElement.append(g)})["catch"](function(h){console.error(h)})};
BasecalledDataController.prototype._changeBarcode=function(a,b){var c=(b=void 0===b?!1:b)?a.target.value:a.target.innerText,d=b?"BasecalledDataRu":"BasecalledData";b?(this._currentRuBarcode=c,console.log(c),console.log(this._currentRuBarcode)):($("#"+this._currentBarcode.replace(" ","_")).removeClass("active"),this._currentBarcode=c,a.target.classList.add("active"));setSelectedBarcode(c,d);this._updateTab(this._flowcellId,this._currentBarcode,this,!0,this._currentRuBarcode)};
BasecalledDataController.prototype._fetchSummaryDataHtmlTable=function(a){var b=this,c=this;this._basecalledSummaryTable=$("#basecalled-summary");this._axiosInstance.get("/api/v1/reads/flowcells/"+a+"/basecalled-summary-html").then(function(d){200!==d.status&&console.error("Error, incorrect status, expected 200, got "+d.status);$("#accordion").length?(b._funHTML=$(d.data),$("#collapseTwo").length&&(b._funHTML[0].children[1].children[1].classList=$("#collapseTwo").get(0).classList),b._funHTML[0].children[0].children[1].classList=
$("#collapseOne").get(0).classList,c._basecalledSummaryTable.html(b._funHTML)):c._basecalledSummaryTable.html(d.data);setTimeout(b._revealResults,100)})["catch"](function(d){console.error(d)})};
BasecalledDataController.prototype._checkChartExists=function(a,b,c,d,m,g,e){e=void 0===e?!1:e;var f={};0<g.length&&(f={plotOptions:{column:{stacking:"normal"}},chart:{type:"column"},xAxis:{type:"category",categories:g}},m&&(f.yAxis={max:100}));Object.prototype.hasOwnProperty.call(this,a)||(e?e&&(a=makeHeatmapChart(b,c)):(a=makeSplineChart(b,c,d),a.update(f)));return a};
BasecalledDataController.prototype._createHistogramCharts=function(a,b){var c=this;this._axiosInstance.get("/api/v1/flowcells/"+a+"/histogram-summary/",{params:{barcodeName:b,initialise:!0}}).then(function(d){var m=d.data;200!==d.status&&console.error("Error, incorrect status, expected 200, got "+d.status);[{chart:"_chartHistogramBasesSequencedByReadLength",divId:"histogram-bases-sequenced-by-read-length",chartTitle:"HISTOGRAM OF BASES SEQUENCED BY READ LENGTH",yAxisTitle:"NUMBER OF BASES",collect:!1},
{chart:"_chartHistogramReadLength",divId:"histogram-read-lengths",chartTitle:"HISTOGRAM OF READ LENGTHS",yAxisTitle:"NUMBER OF READS",collect:!1},{chart:"_collectchartHistogramBasesSequencedByReadLength",divId:"collect-histogram-bases-sequenced-by-read-length",chartTitle:"COLLECT HISTOGRAM OF BASES SEQUENCED BY READ LENGTH",yAxisTitle:"PROPORTION OF BASES LONGER THAN X",collect:!0},{chart:"_collectchartHistogramReadLength",divId:"collect-histogram-read-lengths",chartTitle:"COLLECT HISTOGRAM OF READ LENGTHS",
yAxisTitle:"PROPORTION OF READS LONGER THAN X",collect:!0}].forEach(function(g){c[g.chart]=c._checkChartExists.apply(c,[].concat($jscomp.arrayFromIterable(Object.values(g)),[m]))});c._updateHistogramChartsData(a,b)})["catch"](function(d){console.error(d)})};
BasecalledDataController.prototype._updateHistogramChartsData=function(a,b,c){var d=[["read_length",this._chartHistogramBasesSequencedByReadLength],["read_count",this._chartHistogramReadLength],["collect_read_length",this._collectchartHistogramBasesSequencedByReadLength],["collect_read_count",this._collectchartHistogramReadLength]],m,g;this._axiosInstance.get("/api/v1/flowcells/"+a+"/histogram-summary/",{params:{barcodeName:b}}).then(function(e){var f=e.data.data;200!==e.status&&console.error("Error, incorrect status, expected 200, got "+
e.status);d.forEach(function(h){h=$jscomp.makeIterator(h);var n=h.next().value,p=h.next().value;c&&clearChartData(p);p&&(m=p.series.map(function(l){return l.name}),g=f[n],g.filter(function(l){return!m.includes(l.name)}).forEach(function(l){p.addSeries(l)}),g.filter(function(l){return m.includes(l.name)}).forEach(function(l){var r=p.series.filter(function(q){return q.name===l.name});checkHighChartsDataIsIdentical(l.data,r[0].options.data)||r[0].setData(l.data)}))})})["catch"](function(e){console.error(e)})};
BasecalledDataController.prototype._createBaseCalledReadCharts=function(a,b){var c=this;[{chart:"_averageQualityOverTime",divId:"average-quality-over-time",chartTitle:"AVERAGE QUALITY OVER TIME",yAxisTitle:"AVERAGE READ QUALITY SCORE"},{chart:"_averageReadLengthsOverTime",divId:"average-read-lengths-over-time",chartTitle:"AVERAGE READ LENGTH OVER TIME",yAxisTitle:"AVERAGE READ LENGTH"},{chart:"_cumulativeYieldOverTime",divId:"cumulative-yield-over-time",chartTitle:"CUMULATIVE BASES",yAxisTitle:"CUMULATIVE BASES"},
{chart:"_cumulativeNumberReadsOverTime",divId:"cumulative-number-reads-over-time",chartTitle:"CUMULATIVE READS",yAxisTitle:"CUMULATIVE READS"},{chart:"_maxReadLengthsOverTime",divId:"max-read-lengths-over-time",chartTitle:"MAX READ LENGTH OVER TIME",yAxisTitle:"MAX READ LENGTH"},{chart:"_sequencingRate",divId:"sequencing-rate",chartTitle:"SEQUENCING RATE",yAxisTitle:"BASES/SECOND"}].forEach(function(d){c[d.chart]=c._checkChartExists.apply(c,[].concat($jscomp.arrayFromIterable(Object.values(d)),[!1,
[]]))});this._updateBaseCalledReadCharts(a,b)};
BasecalledDataController.prototype._updateBaseCalledReadCharts=function(a,b,c,d){var m=[this._averageQualityOverTime,this._averageReadLengthsOverTime,this._cumulativeYieldOverTime,this._cumulativeNumberReadsOverTime,this._maxReadLengthsOverTime,this._sequencingRate];this._axiosInstance.get("/api/v1/flowcells/"+a+"/statistics/",{params:{barcodeName:b,ruBarcodeName:void 0===d?"Sequenced":d}}).then(function(g){console.log(g.data.runs);var e=g.data.data;var f,h=!1,n=!1,p=!1,l={},r=null;console.time("statistics charts");
200!==g.status&&console.error("Error, incorrect status, expected 200, got "+g.status);g=$jscomp.makeIterator(Object.entries(e));for(e=g.next();!e.done;e=g.next()){e=$jscomp.makeIterator(e.value);var q=e.next().value;e=e.next().value;var u=[e.map(function(k){return[k[0],k[1]]}),e.map(function(k){return[k[0],k[2]]}),e.map(function(k){return[k[0],k[3]]}),e.map(function(k){return[k[0],k[4]]}),e.map(function(k){return[k[0],k[5]]}),e.map(function(k){return[k[0],k[6]]})];m.forEach(function(k,v){c&&!h&&clearChartData(k);
n=!1;p=0<k.series.length;f=u[v];l=k.series.filter(function(t){return t.name===q});p&&0<l.length&&(r=Array.isArray(l[0].options.data)?l[0].options.data:l[0].options.data.data,n=checkHighChartsDataIsIdentical(f,r));if(!n)if(p&&0<l.length)l[0].setData(f);else{var w=!q.includes("All reads")|"All reads"===b;"All reads"!==b&&k.series.forEach(function(t){t.name.includes("All reads")&&t.update({visible:!1})});k.addSeries({name:q,data:f,visible:w})}});h=!0}console.timeEnd("statistics charts")})["catch"](function(g){console.error(g)})};
BasecalledDataController.prototype._createFlowcellHeatMaps=function(a){var b=this;[{chart:"_chartReadsPerPore",divId:"reads-per-pore",chartTitle:"READS PER CHANNEL"},{chart:"_chartBasesPerPore",divId:"bases-per-pore",chartTitle:"BASES (KB) PER CHANNEL"}].forEach(function(c){b[c.chart]=b._checkChartExists.apply(b,[].concat($jscomp.arrayFromIterable(Object.values(c)),["",!1,[],!0]))});this._updateFlowcellHeatMaps(a)};
BasecalledDataController.prototype._updateFlowcellHeatMaps=function(a){var b=[["readCount",this._chartReadsPerPore],["poreYield",this._chartBasesPerPore]],c={readCount:[],poreYield:[]},d,m,g;this._axiosInstance("/api/v1/flowcells/"+a+"/channel-summary").then(function(e){200!==e.status&&console.error("Error, incorrect status, expected 200, got "+e.status);d=e.data;g=e.data.length;d.forEach(function(f){c.readCount.push([f[0],f[1],f[2]]);c.poreYield.push([f[0],f[1],f[3]])});b.forEach(function(f){var h=
$jscomp.makeIterator(f);f=h.next().value;h=h.next().value;(m=0<h.series.length)?checkHighChartsDataIsIdentical(c[f],h.series[0].options.data)||h.series[0].setData(c[f]):h.addSeries({name:f,data:c[f],borderWidth:512===g?1:.5})})})["catch"](function(e){console.error(e)})};
BasecalledDataController.prototype._createBarcodeProportionBarCharts=function(a){this.hasOwnProperty("_columnChartBarcodeProportion")||(this._columnChartBarcodeProportion=makeColumnChart("barcode-proportion","PERCENT OF TOTAL READS PER BARCODE","PERCENT OF TOTAL"));this.hasOwnProperty("_pieChartBarcodeClassUnclass")||(this._pieChartBarcodeClassUnclass=makePieChart("unclass-pie-proportion","PROPORTION OF READS CLASSIFIED"));this._updateBarcodeProportionCharts(a)};
BasecalledDataController.prototype._updatePieChartProportion=function(a){var b=a.data.pop(),c=this._pieChartBarcodeClassUnclass.series.filter(function(d){return d.name===a.name});c.length?checkHighChartsDataIsIdentical(c[0].options.data,b)||c[0].setData(a.data):this._pieChartBarcodeClassUnclass.addSeries(a)};
BasecalledDataController.prototype._updateBarcodeProportionCharts=function(a){var b=this;this._axiosInstance("/api/v1/flowcells/"+a+"/barcode-proportion").then(function(c){var d=c.data,m=b._columnChartBarcodeProportion.series,g;b._columnChartBarcodeProportion.showLoading('<div class="spinner-border text-success" role="status">\n                                        <span class = "sr-only"> Loading...</span></div>');if([200,204].includes(c.status))if(204===c.status)$("#barcode-proportion-cards").remove();
else{var e=d.pop();c=e.categories;e=e.pieChartData;c={yAxis:{stackLabels:{enabled:!0}},plotOptions:{column:{stacking:"normal",dataLabels:{enabled:!0}}},xAxis:{categories:c}};b._updatePieChartProportion(e);b._columnChartBarcodeProportion.update(c);d.forEach(function(f){g=m.filter(function(h){return h.name===f.name});g.length?checkHighChartsDataIsIdentical([f.data],[g[0].options.data])||g[0].setData(f.data):b._columnChartBarcodeProportion.addSeries(f)});b._columnChartBarcodeProportion.hideLoading()}else console.error("Error, incorrect status, expected 200 or 204, got "+
c.status)})["catch"](function(c){console.error(c)})};BasecalledDataController.prototype.updateTab=function(){this._updateTab(this._flowcellId,this._currentBarcode,this,!1,this._currentRuBarcode)};BasecalledDataController.prototype._updateTab=function(a,b,c,d,m){b=getSelectedBarcode("BasecalledData");"basecalled-data"===getSelectedTab()&&(c._fetchSummaryDataHtmlTable(a),c._updateHistogramChartsData(a,b,d),c._updateBaseCalledReadCharts(a,b,d,m),c._updateBarcodeNavTab(a,d),d||c._updateBarcodeProportionCharts(a))};